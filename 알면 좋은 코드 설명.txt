# 10줄의 입력을 받아 리스트로 저장하기
N = [input() for _ in range(10)]

# 슬라이스에는 정수형이 무조건 들어가야한다.
a = [1,2,3,4]
b = 3
일지라도
a[ : int(b)]로 적어야 오류가 안나온다.

# map(A, B)에서 B엔 리스트, 튜플, 사전자료형이 들어갈 수 있다.
list(map(int, [1, 2, 3, 4]))

# 리스트를 문자열로 변환은 join 함수를 이용한다.
"".join(리스트)

# 문자열을 리스트로 변환하는 방법은 for 반복문을 사용한다.
list_1 = []
for i in 문자열:
    list_1.append(i)

print시 따옴표 자체를 출력하기
\' 또는 \"

input().split()은 공백, split(":")은 :을 기준으로 입력되는 문자를 나누어준다.
input().split() 에 a a a a입력시 ['a', 'a', 'a', 'a']로 출력된다.
* 입력받는 변수가 1개면 split()은 리스트로 만들어준다.
* 입력받는 변수가 입력하는 수와 일치하면 리스트가 아니다.

map() 함수는 input().split()했을때 입력값을 계산가능하게 만들어준다.
a, b = map(int, input().split()) → 2 5 입력
a + b → 7 출력된다.


정수를 ~진수로 변환시 해당 함수를 사용
1. hex() → 0x + 16진수
2. oct() → 0o + 8진수
3. bin() → 0b + 2진수
4. int() →  10진수

0x 0o 0b를 없앨시 사용
%x, %o, %b (소문자), %X, %O, %B (대문자)
n = 10
print('%x' %n)  → 16진수


~진수를 정수로 변환시 사용
해당 숫자 앞에 0x, 0o, 0b를 붙인다.
0x10   →  16
해석 : 16진수인 10을 10진수(정수)로 변환하면 16이다.

16진수를 입력받아 10진수로 저장
a = input()
n = int(a, 16)      #입력받은 문자를 a에 저장하고, 저장된 문자를 16진수로 인식해 10진수로 변환

16진수 구구단으로 익숙해지기
data = input()
change_data = int(data, 16)

for i in range(1, 16) :
    result = change_data * i
    print('%s*%X=%X'%(data, i, result))

유니코드를 정수로 변환시 ord()함수를 사용

정수를 유니코드로 변환시 char()함수를 사용

.format() 함수의 다양한 이용
print("{}는 바보이다.".format("나")) → 나는 바보이다. 라고 출력된다.
print("{:d}".format(52))  → 52가 출력된다.
print("{:15d}".format(52))→ "13개의 빈칸"52 가 출력된다.
print("{:15.2f}".format(3.14159265)) → 3.14가 출력된다. 소수점 둘째자리까지 반올림되어 표시된다.

비트시프트 연산
정수 >> 1을하면 대체로 2배 줄어들고
정수 << 1을하면 대체로 2배 증가한다.
10 << 1 → 20
정수 10은 2진수로 표현시 1010이다.
1010 << 1 하면 오른쪽에 0이 1개 추가된다. → 10100(정수 : 20)
1010 >> 1 하면 오른쪽에 1개 제거된다. → 101(정수 : 5)
101 >> 1하면 오른쪽에 1개 제거된다. → 10(정수 : 2)

a, b입력시 2의 b 거듭제곱만큼 a와 곱하는 방법
b = 1<<b (b가 2면 비트연산을 거쳐 4가된다.)

True or False는 bool()함수를 사용한다.
bool()함수 안에 0 [] {} () 등 비어있으면 False가 출력된다.

** 비트단위(bitwise) 연산자는,
~(bitwise not), &(bitwise and), |(bitwise or), ^(bitwise xor),
<<(bitwise left shift), >>(bitwise right shift)

if 문 대신 3항 연산자 사용
print("True는 참" if True else "True는 거짓")
a, b, c = map(int, input().split())
print(  c if (b if a>b else a) > c else (b if a>b else a) ) : 제일 작은 수

while 함수 익숙해지기
data = ord(input())
a = ord('a')

while a <= data :
    print(chr(a), end=' ')
    a += 1




